# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pr: none

trigger:
  branches:
    include:
    - master
    - dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'

steps:
- task: UseDotNet@2
  displayName: "Use dotnet 6"
  inputs:
    packageType: sdk
    version: 6.x

- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Setup Node'

- task: DotNetCoreCLI@2
  displayName: "Restore Packages"
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: select

- task: DotNetCoreCLI@2
  displayName: "Build Projects"
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: Npm@1
  displayName: "Install NPM packages"
  inputs:
    command: 'install'
    workingDir: '$(System.DefaultWorkingDirectory)//SamplesDashboard//SamplesDashboard//ClientApp'

- task: Npm@1
  displayName: "Pre-emptive npm Build"
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)//SamplesDashboard//SamplesDashboard//ClientApp'
    customCommand: 'run build'

- task: Npm@1
  displayName: "Run Linter"
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)//SamplesDashboard//SamplesDashboard//ClientApp'
    customCommand: 'run lint'

- task: DotNetCoreCLI@2
  displayName: "Run Tests"
  inputs:
    command: 'test'
    projects: '**/*Tests.csproj'
    publishTestResults: false
    arguments: '--configuration $(buildConfiguration) --verbosity normal --logger "trx;logfilename=DevXDashboard.trx"'
  env:
    AZURECLIENTID: $(AzureClientId)
    AZURECLIENTSECRET: $(AzureClientSecret)
    GITHUBAPPKEYIDENTIFIER: $(GitHubAppKeyIdentifier)
    GITHUBAPPID: $(GitHubAppId)
    TENANTID: $(TenantId)
    MSOSCLIENTSECRET: $(MSOClientSecret_Value)
    KEYVAULTSECRET: $(KeyVaultSecret_Value)
    AZUREAD__TENANTID: $(AzureAd__TenantId)
    KEYVAULTAPPID: $(KeyVaultAppId)
    MSOSCLIENTID: $(MSOSClientId)

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest'
    searchFolder: '$(Build.ArtifactStagingDirectory)/TestResults'
    testResultsFiles: '**/DevXDashboard.trx'
    testRunTitle: 'DevXDashboard'
  displayName: 'Publish Test Results'

- task: DotNetCoreCLI@2
  displayName: "Publish Artifacts"
  inputs:
    command: 'publish'
    publishWebProjects: true
    zipAfterPublish: True
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
  env:
    REACT_APP_CLIENT_ID: $(REACT_APP_CLIENT_ID)
    REACT_APP_TENANT_ID: $(REACT_APP_TENANT_ID)

- task: PublishBuildArtifacts@1