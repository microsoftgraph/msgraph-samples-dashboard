# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pr: none

trigger: 
  branches:
    include:
    - master
    - dev

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'

steps:
- task: UseDotNet@2
  displayName: "Use dotnet 5"
  inputs:
    packageType: sdk
    version: 5.x

- task: UseNode@1
  inputs:
    checkLatest: true

- task: DotNetCoreCLI@2
  displayName: "Restore Packages"
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: select

- task: DotNetCoreCLI@2
  displayName: "Build Projects"
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: Npm@1
  displayName: "Install NPM packages"
  inputs:
    command: 'install'
    workingDir: '$(System.DefaultWorkingDirectory)//SamplesDashboard//SamplesDashboard//ClientApp'

- task: Npm@1
  displayName: "Pre-emptive npm Build"
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)//SamplesDashboard//SamplesDashboard//ClientApp'
    customCommand: 'run build'  

- task: Npm@1
  displayName: "Run Linter"
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)//SamplesDashboard//SamplesDashboard//ClientApp'
    customCommand: 'run lint'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    testAssemblyVer2: |
      **/net5.0/**Tests.dll
      !**/*TestAdapter.dll
      !**/obj/**
    diagnosticsEnabled: true
  env:
    AZURECLIENTID: $(AzureClientId)
    AZURECLIENTSECRET: $(AzureClientSecret)
    KEYIDENTIFIER: $(KeyIdentifier)
    TENANTID: $(TenantId)
    MSOSCLIENTSECRET: $(MSOClientSecret_Value)
    KEYVAULTSECRET: $(KeyVaultSecret_Value)
    AZUREADTENANTID: $(AzureAd_TenantId)

- task: PublishTestResults@2
  displayName: "Publish Test Results"
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- task: DotNetCoreCLI@2
  displayName: "Publish Artifacts"
  inputs:
    command: 'publish'
    publishWebProjects: true
    zipAfterPublish: True
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
  env:
    REACT_APP_CLIENT_ID: $(REACT_APP_CLIENT_ID)
    REACT_APP_TENANT_ID: $(REACT_APP_TENANT_ID)
  
- task: PublishBuildArtifacts@1

- task: YodLabs.O365PostMessage.O365PostMessageBuild.O365PostMessageBuild@0
  displayName: 'Graph Client Tooling pipeline fail notification'
  inputs:
    addressType: serviceEndpoint
    serviceEndpointName: 'microsoftgraph pipeline status'
    title: '$(Build.DefinitionName) failure notification'
    text: 'This pipeline has failed. View the build details for further information. This is a blocking failure. '
  condition: failed()
  enabled: false
